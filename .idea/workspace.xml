<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3565c664-36c8-4bcf-9728-9ffb80d0cc42" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view />
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin Class" />
        <option value="JUnit5 Test Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;sejun2&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/sejun2/SesacPG.git&quot;,
    &quot;accountId&quot;: &quot;db2936fb-c9d9-4e5c-aa24-05027cbad7ae&quot;
  }
}</component>
  <component name="JavaAutoRunManager">
    <enabled-run-configurations>
      <run-configuration type="GradleRunConfiguration" name="OrderScreenTest" />
    </enabled-run-configurations>
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2nsmKw566A9IrzQR9RQUycRNPue" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Gradle.Build SesacPG.executor": "Run",
    "Gradle.GsonTest.executor": "Run",
    "Gradle.GsonTest.fromJsonTest.executor": "Debug",
    "Gradle.GsonTest.toJsonTest.executor": "Run",
    "Gradle.HomeScreenTest.display correct options.executor": "Run",
    "Gradle.HomeScreenTest.executor": "Run",
    "Gradle.HomeScreenTest.handleInput.executor": "Run",
    "Gradle.HomeScreenTest.when option 0 is selected, then exit process.executor": "Run",
    "Gradle.OrderScreenTest.display.executor": "Run",
    "Gradle.OrderScreenTest.executor": "Run",
    "Gradle.OrderScreenTest.order fail test, when input out ranged table number, then it says error message.executor": "Run",
    "Gradle.OrderScreenTest.order fail test, when input wrong menu string, then it says error message.executor": "Run",
    "Gradle.OrderScreenTest.order success test.executor": "Run",
    "Gradle.OrderScreenTest.when test.executor": "Run",
    "Gradle.PaymentScreenTest.executor": "Run",
    "Gradle.PaymentScreenTest.handleInput test, when unpaid order is not empty, payment is unsuccessful, then do not prints payment success message and returns null.executor": "Run",
    "Gradle.PaymentScreenTest.handleInput test, when unpaid order is not empty, then .executor": "Run",
    "Gradle.SalesScreenTest.display test.executor": "Run",
    "Gradle.SalesScreenTest.executor": "Run",
    "Gradle.SalesScreenTest.when option 0 is selected, then returns HomeScreen.executor": "Run",
    "Gradle.SalesScreenTest.when option 1 is selected, then returns HomeScreen.executor": "Run",
    "Gradle.SalesScreenTest.when option 2 is selected, then print sales for menu and returns null.executor": "Run",
    "Gradle.SesacRestaurantOrderRepositoryImplTest.executor": "Run",
    "Gradle.SesacRestaurantOrderRepositoryImplTest.orderTest.executor": "Run",
    "Gradle.SesacRestaurantOrderRepositoryImplTest.when additional order for existing, then returns added order.executor": "Run",
    "Gradle.SesacRestaurantOrderRepositoryImplTest.when new order, then returns new order.executor": "Run",
    "Gradle.SesacRestaurantPaymentRepositoryImplTest.paymentTest.executor": "Run",
    "Gradle.SesacRestaurantSalesRepositoryImplTest.executor": "Run",
    "Gradle.SesacRestaurantSalesRepositoryImplTest.getSalesForMenu.executor": "Run",
    "Gradle.Tests in 'SesacPG.test'.executor": "Run",
    "Gradle.Tests in 'data.repository'.executor": "Run",
    "Gradle.UtilFunKtTest.executor": "Run",
    "Gradle.UtilFunKtTest.setMenu happy path test1.executor": "Run",
    "Gradle.UtilFunKtTest.setMenu happy path test2.executor": "Run",
    "Gradle.UtilFunKtTest.setMenu happy path test3.executor": "Run",
    "Gradle.UtilFunKtTest.setMenu sad path test1.executor": "Run",
    "Gradle.UtilFunKtTest.setMenu sad path test2.executor": "Run",
    "JUnit.OrderScreenTest.executor": "Run",
    "Kotlin.MainApplicationKt.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary": "JUnit5",
    "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/imsejun/SesacProjects/SesacPG/src/main/kotlin",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/kotlin" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
    <key name="CreateTestDialog.RecentsKey">
      <recent name="presentation" />
      <recent name="utils" />
      <recent name="data.repository" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.Tests in 'SesacPG.test'">
    <configuration name="PaymentScreenTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;presentation.PaymentScreenTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="PaymentScreenTest.handleInput test, when unpaid order is not empty, payment is unsuccessful, then do not prints payment success message and returns null" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;presentation.PaymentScreenTest.handleInput test, when unpaid order is not empty, payment is unsuccessful, then do not prints payment success message and returns null&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="PaymentScreenTest.handleInput test, when unpaid order is not empty, then " type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;presentation.PaymentScreenTest.handleInput test, when unpaid order is not empty, then &quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="SalesScreenTest" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;presentation.SalesScreenTest&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="Tests in 'SesacPG.test'" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.Tests in 'SesacPG.test'" />
        <item itemvalue="Gradle.PaymentScreenTest" />
        <item itemvalue="Gradle.PaymentScreenTest.handleInput test, when unpaid order is not empty, payment is unsuccessful, then do not prints payment success message and returns null" />
        <item itemvalue="Gradle.PaymentScreenTest.handleInput test, when unpaid order is not empty, then " />
        <item itemvalue="Gradle.SalesScreenTest" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3565c664-36c8-4bcf-9728-9ffb80d0cc42" name="Changes" comment="" />
      <created>1729770099320</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1729770099320</updated>
    </task>
    <servers />
  </component>
</project>